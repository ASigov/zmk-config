/*
 * Copyright (c) 2020 The ZMK Contributors
 *
 * SPDX-License-Identifier: MIT
 */

#include <behaviors.dtsi>
#include <dt-bindings/zmk/bt.h>
#include <dt-bindings/zmk/ext_power.h>
#include <dt-bindings/zmk/keys.h>
#include <dt-bindings/zmk/pointing.h>

/ {
    behaviors {
        u_mt: u_mt {
            compatible = "zmk,behavior-hold-tap";
            label = "Mod Tap";
            bindings = <&kp>, <&kp>;

            #binding-cells = <2>;
            tapping-term-ms = <200>;
            flavor = "tap-preferred";
        };

        u_lt: u_lt {
            compatible = "zmk,behavior-hold-tap";
            label = "Layer Tap";
            bindings = <&mo>, <&kp>;

            #binding-cells = <2>;
            tapping-term-ms = <200>;
            flavor = "tap-preferred";
        };

        u_soft_off: u_soft_off {
            compatible = "zmk,behavior-tap-dance";
            label = "Double-Tap Soft Off";
            #binding-cells = <0>;
            bindings = <&none>, <&soft_off>;
        };

        u_to_tap: u_to_tap {
            compatible = "zmk,behavior-tap-dance";
            label = "Doublt-Tap to Tap";
            #binding-cells = <0>;
            bindings = <&none>, <&to 2>;
        };

        u_to_extra: u_to_extra {
            compatible = "zmk,behavior-tap-dance";
            label = "Double-Tap to Extra";
            #binding-cells = <0>;
            bindings = <&none>, <&to 1>;
        };

        u_to_base: u_to_base {
            compatible = "zmk,behavior-tap-dance";
            label = "Double-Tap to Base";
            #binding-cells = <0>;
            bindings = <&none>, <&to 0>;
        };

        u_caps_word: u_caps_word {
            compatible = "zmk,behavior-mod-morph";
            label = "Caps Word or Caps Lock";
            bindings = <&caps_word>, <&kp CAPSLOCK>;

            #binding-cells = <0>;
            mods = <(MOD_LSFT|MOD_RSFT)>;
        };

        u_to_num: u_to_num {
            compatible = "zmk,behavior-tap-dance";
            label = "Double-Tap to Num";
            #binding-cells = <0>;
            bindings = <&none>, <&to 7>;
        };

        u_to_nav: u_to_nav {
            compatible = "zmk,behavior-tap-dance";
            label = "Double-Tap to Nav";
            #binding-cells = <0>;
            bindings = <&none>, <&to 4>;
        };

        u_to_sym: u_to_sym {
            compatible = "zmk,behavior-tap-dance";
            label = "Double-Tap to Sym";
            #binding-cells = <0>;
            bindings = <&none>, <&to 8>;
        };

        u_to_mouse: u_to_mouse {
            compatible = "zmk,behavior-tap-dance";
            label = "Double-Tap to Mouse";
            #binding-cells = <0>;
            bindings = <&none>, <&to 5>;
        };

        u_ep_tog: u_ep_tog {
            compatible = "zmk,behavior-mod-morph";
            label = "Toggle External Power";
            bindings = <&ext_power EP_TOG>, <&ext_power EP_OFF>;

            #binding-cells = <0>;
            mods = <(MOD_LSFT|MOD_RSFT)>;
        };

        u_to_fun: u_to_fun {
            compatible = "zmk,behavior-tap-dance";
            label = "Double-Tap to Fun";
            #binding-cells = <0>;
            bindings = <&none>, <&to 9>;
        };

        u_to_media: u_to_media {
            compatible = "zmk,behavior-tap-dance";
            label = "Double-Tap to Media";
            #binding-cells = <0>;
            bindings = <&none>, <&to 6>;
        };
    };

    keymap {
        compatible = "zmk,keymap";

        BASE {
            // -----------------------------------------------------------------------------------------
            // | TAB  |  Q  |  W  |  E  |  R  |    T    |   |  Y  |  U   |  I  |  O  |  P  | ESC |
            // | CTRL |  A  |  S  |  D  |  F  |    G    |   |  H  |  J   |  K  |  L  |  ;  |  LWR/'   |
            // | SHFT |  Z  |  X  |  C  |  V  |    B    |   |  N  |  M   |  ,  |  .  |  /  | SHFT |
            //                    | GUI | LWR | ALT/ENT |   | HYPER/SPC | BKSP  | RSE |

            bindings = <
&none  &kp Q             &kp W              &kp E                 &kp R               &kp T          &kp Y           &kp U               &kp I                 &kp O                   &kp P                     &kp LEFT_BRACKET
&none  &u_mt LEFT_WIN A  &u_mt LEFT_ALT S   &u_mt LEFT_CONTROL D  &u_mt LEFT_SHIFT F  &kp G          &kp H           &u_mt LEFT_SHIFT J  &u_mt LEFT_CONTROL K  &u_mt LEFT_ALT L        &u_mt LEFT_WIN SEMICOLON  &kp SINGLE_QUOTE
&none  &u_lt 3 Z         &u_mt RIGHT_ALT X  &kp C                 &kp V               &kp B          &kp N           &kp M               &kp COMMA             &u_mt RIGHT_ALT PERIOD  &u_lt 3 SLASH             &none
                                            &u_lt 6 ESCAPE        &u_lt 4 SPACE       &u_lt 5 TAB    &u_lt 8 RETURN  &u_lt 7 BACKSPACE   &u_lt 9 DELETE
            >;

            label = "Base";
        };

        EXTRA {
            bindings = <
&none  &kp Q  &kp W  &kp E  &kp R  &kp T    &kp Y  &kp U  &kp I      &kp O    &kp P     &kp LBKT
&none  &kp A  &kp S  &kp D  &kp F  &kp G    &kp H  &kp J  &kp K      &kp L    &kp SEMI  &kp APOS
&none  &kp Z  &kp X  &kp C  &kp V  &kp B    &kp N  &kp M  &kp COMMA  &kp DOT  &kp FSLH  &none
                     &none  &none  &none    &none  &none  &none
            >;

            label = "Extra";
        };

        TAP {
            bindings = <
&kp ESC           &kp Q  &kp W  &kp E    &kp R      &kp T      &kp Y      &kp U     &kp I      &kp O    &kp P     &kp LBKT
&kp LEFT_SHIFT    &kp A  &kp S  &kp D    &kp F      &kp G      &kp H      &kp J     &kp K      &kp L    &kp SEMI  &kp APOS
&kp LEFT_CONTROL  &kp Z  &kp X  &kp C    &kp V      &kp B      &kp N      &kp M     &kp COMMA  &kp DOT  &kp FSLH  &kp LEFT_ALT
                                &kp ESC  &kp SPACE  &kp TAB    &kp ENTER  &kp BSPC  &kp BSPC
            >;

            label = "Tap";
        };

        BUTTON {
            bindings = <
&none  &kp LC(Z)     &kp LC(X)     &kp LC(C)         &kp LC(V)       &kp LC(Y)    &kp LC(Y)  &kp LC(V)       &kp LC(C)         &kp LC(X)     &kp LC(Z)     &none
&none  &kp LEFT_WIN  &kp LEFT_ALT  &kp LEFT_CONTROL  &kp LEFT_SHIFT  &none        &none      &kp LEFT_SHIFT  &kp LEFT_CONTROL  &kp LEFT_ALT  &kp LEFT_WIN  &none
&none  &kp LC(Z)     &kp LC(X)     &kp LC(C)         &kp LC(V)       &kp LC(Y)    &kp LC(Y)  &kp LC(V)       &kp LC(C)         &kp LC(X)     &kp LC(Z)     &none
                                   &mkp MB3          &mkp MB1        &mkp MB2     &mkp MB2   &mkp MB1        &mkp MB3
            >;

            label = "Button";
        };

        NAV {
            // -----------------------------------------------------------------------------------------
            // |      |  !  |  @  |  #  |  $  |    %     |   |  ^  |  &  |  *  |  (  |  )  |   \   |
            // |      |  1  |  2  |  3  |  4  |    5     |   |  -  |  =  |  `  |  [  |  ]  |  "|"  |
            // | SHFT |  6  |  7  |  8  |  9  |    0     |   |  _  |  +  |  ~  |  {  |  }  | RSHFT |
            //                     | GUI |     | ALT/ENT |   | HYPER/SPACE | BKSP |    |

            bindings = <
&none  &u_soft_off   &u_to_tap      &u_to_extra       &u_to_base      &none    &kp LC(Y)       &kp LC(V)       &kp LC(C)     &kp LC(X)        &kp LC(Z)     &none
&none  &kp LEFT_WIN  &kp LEFT_ALT   &kp LEFT_CONTROL  &kp LEFT_SHIFT  &none    &kp LEFT_ARROW  &kp DOWN_ARROW  &kp UP_ARROW  &kp RIGHT_ARROW  &u_caps_word  &none
&none  &none         &kp RIGHT_ALT  &u_to_num         &u_to_nav       &none    &kp HOME        &kp PAGE_DOWN   &kp PAGE_UP   &kp END          &kp INSERT    &none
                                    &none             &none           &none    &kp RETURN      &kp BACKSPACE   &kp DELETE
            >;

            label = "Nav";
        };

        MOUSE {
            // -----------------------------------------------------------------------------------------
            // |       |  F1  |  F2  |  F3  |  F4  |  F5 |            |  F6  |  F7  |  F8  |  F9  |  F10  |   |
            // |       | Prev | Next | Vol - | Vol + | Play/Pause |   |      | LFT | DWN |  UP | RGT |     |     |
            // | BTCLR | BT1 | BT2 | BT3 | BT4 | BT5 |   |            |     |     |     |     |     |     |
            //                    |     |     |    |                  |     |     |     |

            bindings = <
&none  &u_soft_off   &u_to_tap      &u_to_extra       &u_to_base      &none    &kp LC(Y)       &kp LC(V)       &kp LC(C)     &kp LC(X)        &kp LC(Z)  &none
&none  &kp LEFT_WIN  &kp LEFT_ALT   &kp LEFT_CONTROL  &kp LEFT_SHIFT  &none    &mmv MOVE_LEFT  &mmv MOVE_DOWN  &mmv MOVE_UP  &mmv MOVE_RIGHT  &none      &none
&none  &none         &kp RIGHT_ALT  &u_to_sym         &u_to_mouse     &none    &msc SCRL_LEFT  &msc SCRL_DOWN  &msc SCRL_UP  &msc SCRL_RIGHT  &none      &none
                                    &none             &none           &none    &mkp MB2        &mkp MB1        &mkp MB3
            >;

            label = "Mouse";
        };

        MEDIA {
            bindings = <
&none  &u_soft_off   &u_to_tap      &u_to_extra       &u_to_base      &none    &none           &none              &none            &none         &none         &none
&none  &kp LEFT_WIN  &kp LEFT_ALT   &kp LEFT_CONTROL  &kp LEFT_SHIFT  &none    &kp C_PREVIOUS  &kp C_VOLUME_DOWN  &kp C_VOLUME_UP  &kp C_NEXT    &u_ep_tog     &none
&none  &none         &kp RIGHT_ALT  &u_to_fun         &u_to_media     &none    &bt BT_SEL 0    &bt BT_SEL 1       &bt BT_SEL 2     &bt BT_SEL 3  &bt BT_SEL 4  &bt BT_CLR
                                    &none             &none           &none    &kp C_STOP      &kp C_PLAY_PAUSE   &kp C_MUTE
            >;

            label = "Media";
        };

        NUM {
            bindings = <
&none  &kp LEFT_BRACKET  &kp N7  &kp N8      &kp N9  &kp RIGHT_BRACKET    &none  &u_to_base      &u_to_extra       &u_to_tap      &u_soft_off   &none
&none  &kp SEMICOLON     &kp N4  &kp N5      &kp N6  &kp EQUAL            &none  &kp LEFT_SHIFT  &kp LEFT_CONTROL  &kp LEFT_ALT   &kp LEFT_WIN  &none
&none  &kp GRAVE         &kp N1  &kp N2      &kp N3  &kp BACKSLASH        &none  &u_to_num       &u_to_nav         &kp RIGHT_ALT  &none         &none
                                 &kp PERIOD  &kp N0  &kp MINUS            &none  &none           &none
            >;

            label = "Num";
        };

        SYM {
            bindings = <
&none  &kp LEFT_BRACE  &kp AMPERSAND    &kp ASTERISK          &kp LEFT_PARENTHESIS   &kp RIGHT_BRACE    &none  &u_to_base      &u_to_extra       &u_to_tap      &u_soft_off   &none
&none  &kp COLON       &kp DOLLAR       &kp PERCENT           &kp CARET              &kp PLUS           &none  &kp LEFT_SHIFT  &kp LEFT_CONTROL  &kp LEFT_ALT   &kp LEFT_WIN  &none
&none  &kp TILDE       &kp EXCLAMATION  &kp AT                &kp HASH               &kp PIPE           &none  &u_to_sym       &u_to_mouse       &kp RIGHT_ALT  &none         &none
                                        &kp LEFT_PARENTHESIS  &kp RIGHT_PARENTHESIS  &kp UNDERSCORE     &none  &none           &none
            >;

            label = "Sym";
        };

        FUN {
            bindings = <
&none  &kp F12  &kp F7  &kp F8             &kp F9     &kp PRINTSCREEN    &none  &u_to_base      &u_to_extra       &u_to_tap      &u_soft_off   &none
&none  &kp F11  &kp F4  &kp F5             &kp F6     &kp SCROLLLOCK     &none  &kp LEFT_SHIFT  &kp LEFT_CONTROL  &kp LEFT_ALT   &kp LEFT_WIN  &none
&none  &kp F10  &kp F1  &kp F2             &kp F3     &kp PAUSE_BREAK    &none  &u_to_fun       &u_to_media       &kp RIGHT_ALT  &none         &none
                        &kp K_APPLICATION  &kp SPACE  &kp TAB            &none  &none           &none
            >;

            label = "Fun";
        };
    };
};
